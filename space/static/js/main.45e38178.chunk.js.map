{"version":3,"sources":["store/state.js","actions/ReposActionsType.js","store/reducers/index.js","store/reducers/ReposReducers.js","store/index.js","actions/ReposActions.js","graphql/repository.js","actions/Config.js","actions/index.js","components/post.js","components/home.js","components/slate/markdown-shortcuts.js","components/edit.js","App.js","serviceWorker.js","index.js"],"names":["store_state","config","pageTitle","user","SET_ISSUE","Symbol","SET_ISSUES","SET_REPOS","combineReducers","setIssue","state","arguments","length","undefined","defaultState","action","type","Types","issue","data","Object","assign","setIssues","issues","console","log","store","createStore","reducers","applyMiddleware","thunk","client","repos","Repository","classCallCheck","this","owner","name","labels","concat","labelIds","repositoryId","graphql","currentPage","first","after","gql","_templateObject","number","_templateObject2","content","title","_templateObject3","alert","setConfig","cf","token","httpLink","HttpLink","uri","headers","Authorization","ApolloClient","link","cache","InMemoryCache","Repos","dispatch","query","getIssues","then","res","repository","getIssue","setIssueAdd","mutate","mutation","setRepos","start","end","Post","props","_this","possibleConstructorReturn","getPrototypeOf","call","params","match","msg","setState","CardIssue","_this2","react_default","a","createElement","Card","className","Header","Title","createdAt","Body","dangerouslySetInnerHTML","__html","bodyHTML","Container","Button","onClick","e","handleClick","Component","connect","ownProps","Home","message","spaces","value","CardIssues","ButtonNext","ButtonPre","CardTotalCount","edges","pageInfo","totalCount","map","list","index","date","Date","node","key","toLocaleString","Footer","reactions","comments","hasPreviousPage","preClick","startCursor","hasNextPage","nextClick","endCursor","ButtonGroup","initialValue","Value","fromJSON","object","document","nodes","text","React","leaves","Edit","getType","chars","onChangeTitle","target","localStorage","setItem","onValueChange","_ref","JSON","stringify","toJSON","onClickAddNewPost","parse","item","join","removeItem","renderBlock","editor","next","attributes","children","onKeyDown","event","onSpace","onBackspace","onEnter","selection","isExpanded","startBlock","slice","offset","replace","preventDefault","setBlocks","wrapBlock","moveFocusToStartOfNode","delete","unwrapBlock","splitBlock","now","manyDay","Math","floor","day","getDay","getItem","ButtonSubmit","Form","Control","onChange","placeholder","defaultValue","slate_react_es","App","es","react_router_dom","react_router","path","exact","component","to","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45e38178.chunk.js","sourcesContent":["export default {\r\n    config:{},\r\n    pageTitle:\"首页\",\r\n    user:[]\r\n }","export const SET_CONFIG = Symbol('SET_CONFIG')\r\nexport const GET_STATE = Symbol('GET_STATE')\r\nexport const SET_ISSUE = Symbol('SET_ISSUE')\r\nexport const SET_ISSUES = Symbol('SET_ISSUES')\r\nexport const SET_CLIENT = Symbol('SET_CLIENT')\r\nexport const SET_REPOS = Symbol('SET_REPOS')\r\n","import {combineReducers} from 'redux'\r\nimport { setIssue,setIssues } from \"./ReposReducers\"\r\n\r\nexport default combineReducers({\r\n    setIssue,setIssues\r\n})","// 它就是将来真正要用到的数据，我们将其统一放置在reducers.js文件\r\nimport defaultState from '../state.js'\r\nimport * as Types from '../../actions/ReposActionsType'\r\nfunction setIssue(state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_ISSUE:\r\n        state.issue = action.data\r\n        //console.log(\"得到\",state,\"data\",action,action.type)\r\n        //return state\r\n        return Object.assign({},state) //直接返回state是不会自动的刷新的\r\n        default:\r\n        return state\r\n    }\r\n}\r\nfunction setIssues(state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_ISSUES:\r\n        state.issues = action.data\r\n        console.log(\"得到\",state,\"data\",action,action.type)\r\n        //return state\r\n        return Object.assign({},state)\r\n        default:\r\n        return state\r\n    }\r\n}\r\nfunction setConfig (state = defaultState.config,action){\r\n    switch(action.type){\r\n        case Types.SET_CONFIG:\r\n        state.config = action.data\r\n        //console.log(\"进入\",state,\"data\",action,action.type)\r\n        return state\r\n        case Types.SET_CLIENT:\r\n        state.client = action.data\r\n        //console.log(\"进入\",state,\"data\",action,action.type)\r\n        return state\r\n        default:\r\n        //console.log(\"得到\",state,\"data\",action,action.type)\r\n        return state\r\n    }\r\n}\r\nfunction pageTitle (state = defaultState.pageTitle,action) {\r\n// 不同的action有不同的处理逻辑\r\n    switch (action.type) {\r\n        case 'SET_PAGE_TITLE':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nfunction user (state = defaultState.user, action){\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n        return action.data\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport {\r\n    setIssue,\r\n    setIssues,\r\n    setConfig,\r\n    pageTitle,\r\n    user\r\n}","// index.js\r\n// applyMiddleware: redux通过该函数来使用中间件\r\n// createStore: 用于创建store实例\r\nimport { applyMiddleware, createStore } from 'redux'\r\n\r\n// 中间件，作用：如果不使用该中间件，当我们dispatch一个action时，需要给dispatch函数传入action    \r\n// 对象；但如果我们使用了这个中间件，那么就可以传入一个函数，\r\n// 这个函数接收两个参数:dispatch和    getState。这个dispatch可以在将来的异步请求完成后使用，对于异步action很有用\r\nimport thunk from 'redux-thunk'\r\n\r\n// 引入reducer\r\nimport reducers from './reducers/index'\r\n\r\n// 创建store实例\r\nlet store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n)\r\n//console.log(\"引入了store\",reducers)\r\nexport default store","import * as Types from \"./ReposActionsType\"\r\nimport {config} from \"./Config\"\r\nvar client \r\nvar repos \r\nexport const setConfig = (data)=>{\r\n    let cf = config(data)\r\n    client = cf.client\r\n    repos = cf.repos\r\n}\r\nexport const setIssues = (data = {}) => {\r\n    return (dispatch)=>{\r\n        let type = data.type || \"next\"\r\n        let first = data.first || 10\r\n        let after = data.after\r\n        client.query({query:repos.getIssues(type,first,after)}).then(res=>{\r\n            //console.log(\"issues获取的内容\",res)\r\n            //let issues = res.data.repository.issues\r\n            dispatch({type:Types.SET_ISSUES, data: res.data.repository.issues})\r\n        }) \r\n    }\r\n}\r\n// 设置post内容\r\nexport const setIssue = (data = {}) => {\r\n    return (dispatch)=>{\r\n        let number = data.number || 6\r\n        let first = data.first || 10\r\n        let after = data.after\r\n        client.query({query:repos.getIssue(number,first,after)}).then(res=>{\r\n            let issue = res.data.repository.issue\r\n            dispatch({type:Types.SET_ISSUE, data:issue})\r\n        }) \r\n    }\r\n}\r\n// 设置post内容之增加post\r\nexport const setIssueAdd = ( data = {})=> {\r\n    return (dispatch)=>{\r\n        console.log(\"data\",data)\r\n        let content = data.content\r\n        let title  = data.title\r\n        client.mutate({\r\n            mutation : repos.setIssueAdd(content,title)\r\n        }).then(res=>{\r\n            console.log(res)\r\n\r\n        })\r\n        // client.query({query:repos.getIssue(number,first,after)}).then(res=>{\r\n        //     console.log(res)\r\n        //     //let issue = res.data.repository.issue\r\n        //     //dispatch({type:Types.SET_ISSUE, data:issue})\r\n        // }) \r\n    }\r\n}\r\n// 异步获取内容\r\nexport const setRepos = (type,start,end) => {\r\n    return (dispatch)=>{\r\n        dispatch({type: Types.SET_REPOS})\r\n    }\r\n  };\r\n","import gql from 'graphql-tag'\r\nclass Repository {\r\n  constructor(config) {\r\n    this.owner = config.owner\r\n    this.name = config.name\r\n    this.labels = config.labels ? `,labels:\"${config.labels}\"` : \"\"\r\n    this.labelIds = config.labelIds ? config.labelIds : \"MDU6TGFiZWwxMzU2ODYzMTMz\"\r\n    this.repositoryId = config.repositoryId ? config.repositoryId : \"MDEwOlJlcG9zaXRvcnkxMjM4ODY3NzE=\"\r\n    this.graphql = \"\"\r\n    this.currentPage = \"first:10\"\r\n  }\r\n  getIssues(type, first, after, labels) {\r\n    if(type === \"next\"){\r\n      first = first? `first:${first}`:\"\"\r\n      after =after?`,after:\"${after}\"`:\"\"\r\n    }else{\r\n      first = first? `last:${first}`:\"\"\r\n      after =after?`,before:\"${after}\"`:\"\"\r\n    }\r\n    labels = labels?`,labels:\"${labels}\"`: this.labels\r\n    console.log(\"gql set\",labels)\r\n    return gql `\r\n        {\r\n          repository(owner: \"${this.owner}\", name: \"${this.name}\") {\r\n              issues(${first} ${after} ${labels},orderBy:{field:CREATED_AT,direction:DESC}){\r\n                totalCount\r\n                pageInfo {\r\n                  endCursor\r\n                  startCursor\r\n                  hasNextPage\r\n                  hasPreviousPage\r\n                } \r\n                edges {\r\n                  node {\r\n                    id\r\n                    number\r\n                    title\r\n                    bodyHTML\r\n                    body\r\n                    author{\r\n                        login\r\n                    }\r\n                    createdAt\r\n                    comments {\r\n                     totalCount\r\n                    }\r\n                    reactions(content:HEART){\r\n                      totalCount\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n          }\r\n        }\r\n        `\r\n  }\r\n  getIssue(number, first, after) {\r\n    number = `number:${number}`\r\n    first = first? `first:${first}`:\"\"\r\n    after =after?`,after:\"${after}\"`:\"\"\r\n    //,orderBy:{field:CREATED_AT,direction:DESC}\r\n    return gql `\r\n        {\r\n          repository(owner: \"${this.owner}\", name: \"${this.name}\") {\r\n              issue(${number}){\r\n                id\r\n                number\r\n                title\r\n                bodyHTML\r\n                body\r\n                author{\r\n                  login\r\n                }\r\n                createdAt\r\n                comments( ${first} ${after}) {\r\n                  totalCount\r\n                  edges{\r\n                    node{\r\n                      bodyHTML\r\n                      author{\r\n                        login\r\n                      }\r\n                      reactions(content:HEART){\r\n                        totalCount\r\n                      }\r\n                      createdAt\r\n                    }\r\n                    cursor\r\n                  }\r\n                }\r\n                reactions(content:HEART){\r\n                  totalCount\r\n                }\r\n              }\r\n          }\r\n        }\r\n        `\r\n  }\r\n  setIssueAdd(content,title,repositoryId,labelIds){\r\n    let first =`first: 100` //第一次更新是没有first的\r\n    title = title?title : \"没有标题真是太奇怪了\" \r\n    labelIds = labelIds?labelIds:this.labelIds\r\n    repositoryId = repositoryId? repositoryId: this.repositoryId\r\n    if(!repositoryId){\r\n      alert('需要仓库的ID')\r\n      return\r\n    }\r\n    console.log(title,labelIds,repositoryId,content)\r\n    return gql `\r\n    mutation CreateIssuePayload\r\n    {\r\n      createIssue(input:{repositoryId:\"${repositoryId}\", title: \"${title}\",body:\" ${content}\",labelIds: \"${labelIds}\"}) {\r\n          issue{\r\n            id\r\n            number\r\n            title\r\n            bodyHTML\r\n            body\r\n            author{\r\n              login\r\n            }\r\n            createdAt\r\n            comments( ${first}) {\r\n              totalCount\r\n              edges{\r\n                node{\r\n                  bodyHTML\r\n                  author{\r\n                    login\r\n                  }\r\n                  reactions(content:HEART){\r\n                    totalCount\r\n                  }\r\n                  createdAt\r\n                }\r\n                cursor\r\n              }\r\n            }\r\n            reactions(content:HEART){\r\n              totalCount\r\n            }\r\n          }\r\n      }\r\n    }\r\n    `\r\n  }\r\n}\r\nexport default Repository;","import {ApolloClient}from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport Repos from \"../graphql/repository\"\r\n\r\nexport const config = (data)=>{\r\n    if(!data)return\r\n    let token = data.token\r\n    const httpLink = new HttpLink({\r\n        uri: 'https://api.github.com/graphql', // 配置请求url \r\n        headers: { // 配置header\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n    const client =  new ApolloClient({\r\n        link:  httpLink,\r\n        cache: new InMemoryCache() // 缓存\r\n    })  \r\n    // 增加配置\r\n    const repos = new Repos(data)\r\n    return{\r\n        client,repos\r\n    }\r\n}\r\n","import * as Repos from \"./ReposActions\";\r\nlet Actions = Repos\r\n// Repos\r\nexport const setIssues = Repos.setIssues;\r\n// issue\r\nexport const setIssueAdd = Repos.setIssueAdd;\r\nexport const setIssue = Repos.setIssue;\r\n// All\r\nexport default Actions","import React, { Component } from 'react';\r\nimport {Container,Card,Button, CardColumns} from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { setIssue } from '../actions';\r\nclass Post extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    //console.log(props)\r\n    let params = props.match.params\r\n    let number = params.number?params.number:6\r\n    this.state = {msg:\"msg hhh\",number}\r\n  }  \r\n  componentDidMount () {\r\n    let setIssue = this.props.setIssue\r\n    let number = this.state.number\r\n    console.log(\"Post初始化\",number)\r\n    setIssue({number}) // number first after 后面两个是评论的\r\n  }\r\n  handleClick(){\r\n    this.setState({\r\n      msg:\"msg修改\"\r\n    })\r\n    console.log(this)\r\n  };\r\n  render() {\r\n    let CardIssue\r\n    if(this.props.state.setIssue.issue){\r\n      let issue = this.props.state.setIssue.issue\r\n      CardIssue = (\r\n          <Card className=\"post-content\">\r\n            <Card.Header>{issue.title}</Card.Header>\r\n            <Card.Title>{issue.createdAt}</Card.Title>\r\n            <Card.Body  dangerouslySetInnerHTML = {{ __html: issue.bodyHTML }}/>              \r\n          </Card>\r\n      )\r\n    }else{\r\n      CardIssue = (<Card>等等</Card>)\r\n    }\r\n    return (  \r\n        <Container className=\"xx-space-post\">\r\n          <Card>\r\n          {CardIssue}\r\n          </Card>\r\n          <Card>\r\n            放评论的地方\r\n          </Card>\r\n          <Button onClick={(e)=>this.handleClick(e)}>Evernote</Button>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state 映射\",state)\r\n  return {\r\n      state\r\n  }\r\n}\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\nreturn {\r\n  setIssue(data){\r\n    dispatch(setIssue(data))\r\n  }\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\r\n//export default Post;\r\n","import React, { Component } from 'react';\r\nimport {Container,Card,Button, CardColumns, ButtonGroup} from 'react-bootstrap';\r\nimport { setIssues } from '../actions';\r\nimport { connect } from 'react-redux'\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      message: \"test\",\r\n      spaces: []\r\n    };\r\n    console.log(props)\r\n  }\r\n  componentDidMount () {\r\n    let {setIssues} = this.props\r\n    console.log(\"Home 初始化\")\r\n    setIssues()\r\n  }\r\n  handleClick(){\r\n    alert(\"home\")\r\n  };\r\n  preClick(e,value){\r\n    let {setIssues} = this.props\r\n    let data = {}\r\n    data.type = \"previous\"\r\n    data.after = value\r\n    console.log(\"设置上一页\",data)\r\n    setIssues(data)\r\n  }\r\n  nextClick(e,value){\r\n    let {setIssues} = this.props\r\n    let after = value\r\n    console.log(\"设置下一页\",after)\r\n    setIssues({after})\r\n  }\r\n  render() {\r\n    let CardIssues\r\n    let ButtonNext=\"\",ButtonPre=\"\",CardTotalCount=\"\"\r\n    if(this.props.state.setIssues.issues){\r\n      let issues = this.props.state.setIssues.issues\r\n      let edges = issues.edges\r\n      let pageInfo = issues.pageInfo\r\n      let totalCount = issues.totalCount\r\n      CardIssues = edges.map((list,index) => {\r\n        let date = new Date(list.node.createdAt)\r\n        return (\r\n          <Card key = {index}>\r\n            <Card.Header>{list.node.title}</Card.Header>\r\n            <Card.Title>{date.toLocaleString()}</Card.Title>\r\n            <Card.Body dangerouslySetInnerHTML = {{ __html:list.node.bodyHTML }}></Card.Body>\r\n            <Card.Footer>{list.node.reactions.totalCount}|comments: {list.node.comments.totalCount}</Card.Footer>\r\n          </Card>)\r\n      })\r\n      if(pageInfo.hasPreviousPage){\r\n        ButtonPre = (<Button onClick={(e)=>this.preClick(e,pageInfo.startCursor)}>上一页</Button>)\r\n      }\r\n      if(pageInfo.hasNextPage){\r\n        ButtonNext = (<Button onClick={(e)=>this.nextClick(e,pageInfo.endCursor)}>下一页</Button>)\r\n      }\r\n      CardTotalCount = <div>{totalCount}</div>\r\n    }else{\r\n      CardIssues = (\r\n        <Card>\r\n          请骚等\r\n        </Card>\r\n      )\r\n    }\r\n    return (  \r\n        <Container className=\"xx-space\">\r\n          <Card>\r\n            <Card.Body>\r\n\r\n                {CardIssues}\r\n              \r\n            </Card.Body>\r\n            <ButtonGroup>\r\n              {ButtonPre}{ButtonNext} \r\n            </ButtonGroup>\r\n            <Card.Footer>\r\n              {CardTotalCount}\r\n            </Card.Footer>\r\n          </Card>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state 映射\",state)\r\n  return {\r\n      state\r\n  }\r\n}\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setIssues(data){\r\n      dispatch(setIssues(data))\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import { Editor } from 'slate-react'\r\nimport { Value } from 'slate'\r\n\r\nimport React from 'react'\r\n//import initialValueAsJson from './value.json'\r\n\r\n/**\r\n * Deserialize the initial editor value.\r\n *\r\n * @type {Object}\r\n */\r\nlet initialValueAsJson = {\r\n    \"object\": \"value\",\r\n    \"document\": {\r\n      \"object\": \"document\",\r\n      \"nodes\": [\r\n        {\r\n          \"object\": \"block\",\r\n          \"type\": \"paragraph\",\r\n          \"nodes\": [\r\n            {\r\n              \"object\": \"text\",\r\n              \"text\":\r\n                \"The editor gives you full control over the logic you can add. For example, it's fairly common to want to add markdown-like shortcuts to editors. So that, when you start a line with \\\"> \\\" you get a blockquote that looks like this:\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"object\": \"block\",\r\n          \"type\": \"block-quote\",\r\n          \"nodes\": [\r\n            {\r\n              \"object\": \"text\",\r\n              \"text\": \"A wise quote.\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"object\": \"block\",\r\n          \"type\": \"paragraph\",\r\n          \"nodes\": [\r\n            {\r\n              \"object\": \"text\",\r\n              \"text\":\r\n                \"Order when you start a line with \\\"## \\\" you get a level-two heading, like this:\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"object\": \"block\",\r\n          \"type\": \"heading-two\",\r\n          \"nodes\": [\r\n            {\r\n              \"object\": \"text\",\r\n              \"text\": \"Try it out!\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"object\": \"block\",\r\n          \"type\": \"paragraph\",\r\n          \"nodes\": [\r\n            {\r\n              \"object\": \"text\",\r\n              \"text\":\r\n                \"Try it out for yourself! Try starting a new line with \\\">\\\", \\\"-\\\", or \\\"#\\\"s.\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\nconst initialValue = Value.fromJSON(initialValueAsJson)\r\n\r\n/**\r\n * The auto-markdown example.\r\n *\r\n * @type {Component}\r\n */\r\n\r\nclass MarkdownShortcuts extends React.Component {\r\n  /**\r\n   * Get the block type for a series of auto-markdown shortcut `chars`.\r\n   *\r\n   * @param {String} chars\r\n   * @return {String} block\r\n   */\r\n\r\n  getType = chars => {\r\n    switch (chars) {\r\n      case '*':\r\n      case '-':\r\n      case '+':\r\n        return 'list-item'\r\n      case '>':\r\n        return 'block-quote'\r\n      case '#':\r\n        return 'heading-one'\r\n      case '##':\r\n        return 'heading-two'\r\n      case '###':\r\n        return 'heading-three'\r\n      case '####':\r\n        return 'heading-four'\r\n      case '#####':\r\n        return 'heading-five'\r\n      case '######':\r\n        return 'heading-six'\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Render the example.\r\n   *\r\n   * @return {Component} component\r\n   */\r\n\r\n  render() {\r\n    return (\r\n      <Editor\r\n        placeholder=\"Write some markdown...\"\r\n        defaultValue={initialValue}\r\n        onKeyDown={this.onKeyDown}\r\n        renderBlock={this.renderBlock}\r\n      />\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Render a Slate block.\r\n   *\r\n   * @param {Object} props\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   * @return {Element}\r\n   */\r\n\r\n  renderBlock = (props, editor, next) => {\r\n    const { attributes, children, node } = props\r\n\r\n    switch (node.type) {\r\n      case 'block-quote':\r\n        return <blockquote {...attributes}>{children}</blockquote>\r\n      case 'bulleted-list':\r\n        return <ul {...attributes}>{children}</ul>\r\n      case 'heading-one':\r\n        return <h1 {...attributes}>{children}</h1>\r\n      case 'heading-two':\r\n        return <h2 {...attributes}>{children}</h2>\r\n      case 'heading-three':\r\n        return <h3 {...attributes}>{children}</h3>\r\n      case 'heading-four':\r\n        return <h4 {...attributes}>{children}</h4>\r\n      case 'heading-five':\r\n        return <h5 {...attributes}>{children}</h5>\r\n      case 'heading-six':\r\n        return <h6 {...attributes}>{children}</h6>\r\n      case 'list-item':\r\n        return <li {...attributes}>{children}</li>\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On key down, check for our specific key shortcuts.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onKeyDown = (event, editor, next) => {\r\n    switch (event.key) {\r\n      case ' ':\r\n        return this.onSpace(event, editor, next)\r\n      case 'Backspace':\r\n        return this.onBackspace(event, editor, next)\r\n      case 'Enter':\r\n        return this.onEnter(event, editor, next)\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On space, if it was after an auto-markdown shortcut, convert the current\r\n   * node into the shortcut's corresponding type.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onSpace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    const { start } = selection\r\n    const chars = startBlock.text.slice(0, start.offset).replace(/\\s*/g, '')\r\n    const type = this.getType(chars)\r\n    if (!type) return next()\r\n    if (type === 'list-item' && startBlock.type === 'list-item') return next()\r\n    event.preventDefault()\r\n\r\n    editor.setBlocks(type)\r\n\r\n    if (type === 'list-item') {\r\n      editor.wrapBlock('bulleted-list')\r\n    }\r\n\r\n    editor.moveFocusToStartOfNode(startBlock).delete()\r\n  }\r\n\r\n  /**\r\n   * On backspace, if at the start of a non-paragraph, convert it back into a\r\n   * paragraph node.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onBackspace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n    if (selection.start.offset !== 0) return next()\r\n\r\n    const { startBlock } = value\r\n    if (startBlock.type === 'paragraph') return next()\r\n\r\n    event.preventDefault()\r\n    editor.setBlocks('paragraph')\r\n\r\n    if (startBlock.type === 'list-item') {\r\n      editor.unwrapBlock('bulleted-list')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On return, if at the end of a node type that should not be extended,\r\n   * create a new paragraph below it.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onEnter = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    const { start, end, isExpanded } = selection\r\n    if (isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    if (start.offset === 0 && startBlock.text.length === 0)\r\n      return this.onBackspace(event, editor, next)\r\n    if (end.offset !== startBlock.text.length) return next()\r\n\r\n    if (\r\n      startBlock.type !== 'heading-one' &&\r\n      startBlock.type !== 'heading-two' &&\r\n      startBlock.type !== 'heading-three' &&\r\n      startBlock.type !== 'heading-four' &&\r\n      startBlock.type !== 'heading-five' &&\r\n      startBlock.type !== 'heading-six' &&\r\n      startBlock.type !== 'block-quote'\r\n    ) {\r\n      return next()\r\n    }\r\n\r\n    event.preventDefault()\r\n    editor.splitBlock().setBlocks('paragraph')\r\n  }\r\n}\r\n\r\n/**\r\n * Export.\r\n */\r\n\r\nexport default MarkdownShortcuts","import React, { Component } from 'react';\r\nimport {Container,Card,Button,Form, CardColumns, ButtonGroup} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { setIssue,setIssueAdd } from '../actions';\r\nimport { Editor } from 'slate-react';\r\nimport { Value } from 'slate';\r\nimport MarkdownShortcuts from './slate/markdown-shortcuts'\r\nlet initialJson = {\r\n  document: {\r\n    nodes: [\r\n      {\r\n        object: 'block',\r\n        type: 'paragraph',\r\n        nodes: [\r\n          {\r\n            object: 'text',\r\n            leaves: [\r\n              {\r\n                text: '真是开心啊',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n}\r\nconst initialValue = Value.fromJSON(initialJson)\r\nclass Edit extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    //console.log(props)\r\n    let params = props.match.params\r\n    let number = params.number?params.number:\"new\"\r\n    /* q = d - 1324 * 24 * 60 * 60  \r\n    *  1443365529298 是第一天\r\n    *  Sun Sep 27 2015 22:52:09 GMT+0800 (中国标准时间)\r\n    */\r\n    let now = new Date()\r\n    let show_day = [\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]\r\n    let manyDay = Math.floor((now - 1443365529298)/(24 * 60 * 60 * 1000)) // 往下 取整\r\n    let day = now.getDay()\r\n    let title = `传说之旅${manyDay} ${show_day[day]}`\r\n    //let content = \"今天发生了什么愉快的事情呢？\"\r\n    this.state = {msg:\"msg hhh\",number,title,value:initialValue}\r\n  }  \r\n  componentDidMount () {\r\n    let setIssue = this.props.setIssue\r\n    let number = this.state.number\r\n    if(number === \"new\"){\r\n      let title = localStorage.getItem('title')\r\n      let content = localStorage.getItem('conent')\r\n      if(title){\r\n        this.setState({title})\r\n      }\r\n      if(content){\r\n        this.setState({content})\r\n      }\r\n    }else{\r\n      setIssue({number}) // number first after 后面两个是评论的\r\n    }\r\n    console.log(\"Edit初始化\",number)\r\n    \r\n  }\r\n  handleClick(){\r\n    this.setState({\r\n      msg:\"msg修改\"\r\n    })\r\n    console.log(this)\r\n  }\r\n  getType = chars => {\r\n    switch (chars) {\r\n      case '*':\r\n      case '-':\r\n      case '+':\r\n        return 'list-item'\r\n      case '>':\r\n        return 'block-quote'\r\n      case '#':\r\n        return 'heading-one'\r\n      case '##':\r\n        return 'heading-two'\r\n      case '###':\r\n        return 'heading-three'\r\n      case '####':\r\n        return 'heading-four'\r\n      case '#####':\r\n        return 'heading-five'\r\n      case '######':\r\n        return 'heading-six'\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n  onChangeTitle = (e)=>{\r\n    let title = e.target.value\r\n    if (title !== this.state.title) {\r\n      localStorage.setItem('title', title)\r\n    }\r\n    this.setState({\r\n      title\r\n    })\r\n  }\r\n  onValueChange = ({value}) =>{\r\n    // Check to see if the document has changed before saving.\r\n    if (value.document !== this.state.value.document) {\r\n      const content = JSON.stringify(value.toJSON())\r\n      localStorage.setItem('content', content)\r\n      // console.log(content)\r\n    }\r\n    this.setState({value})\r\n    // console.log(this.state)\r\n  }\r\n  onClickAddNewPost = ()=>{\r\n    const { setIssueAdd } = this.props\r\n    // 1. 获取actions 2. 执行提交内容\r\n    const content = JSON.stringify(this.state.value.document)\r\n    const nodes = JSON.parse(content)\r\n    // console.log(content,nodes)\r\n    let values = nodes.nodes.map((item,index)=>item.nodes[0].text)\r\n    let value = values.join(\"\\\\r\\\\n\")\r\n    let title = this.state.title\r\n    let data = {content:value,title}\r\n    console.log(value)\r\n    localStorage.removeItem('title')\r\n    localStorage.removeItem('content')\r\n    setIssueAdd(data)\r\n  }\r\n  render() {\r\n    let CardIssue\r\n    let ButtonSubmit = <Button onClick = {(e)=>this.onClickAddNewPost(e)}>增加</Button>\r\n    if(this.props.state.setIssue.issue){\r\n      let issue = this.props.state.setIssue.issue\r\n      // 赋值给state\r\n    }else{\r\n      CardIssue = (<Card>等等</Card>)\r\n    }\r\n    return (  \r\n        <Container className=\"xx-space-Edit\">\r\n          <Card>\r\n            <Card className=\"Edit-content\">\r\n              <Card.Header><Form.Control type=\"text\" onChange = {(e)=>this.onChangeTitle(e)} placeholder=\"题目\" defaultValue={this.state.title} /></Card.Header>\r\n              <Card.Title>{this.state.createdAt||new Date().toLocaleString()}</Card.Title>\r\n              <Card.Body>\r\n                <Editor \r\n                  placeholder = \"hhh\"\r\n                  value = {this.state.value}\r\n                  onChange = {this.onValueChange}\r\n                  />\r\n                {/* <Editor\r\n                  placeholder = \"打算放预览的地方啦\"\r\n                  value = { this.state.value }\r\n                  onKeyDown={this.onKeyDown}\r\n                  renderBlock={this.renderBlock}\r\n                /> */}\r\n              </Card.Body> \r\n              {/* <MarkdownShortcuts/> */}\r\n              <Card.Footer>\r\n                <Card>\r\n                  <ButtonGroup>\r\n                    {ButtonSubmit}\r\n                  </ButtonGroup>\r\n                </Card>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Card>\r\n        </Container>\r\n    );\r\n  }\r\n    /**\r\n   * Render a Slate block.\r\n   *\r\n   * @param {Object} props\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   * @return {Element}\r\n   */\r\n\r\n  renderBlock = (props, editor, next) => {\r\n    const { attributes, children, node } = props\r\n\r\n    switch (node.type) {\r\n      case 'block-quote':\r\n        return <blockquote {...attributes}>{children}</blockquote>\r\n      case 'bulleted-list':\r\n        return <ul {...attributes}>{children}</ul>\r\n      case 'heading-one':\r\n        return <h1 {...attributes}>{children}</h1>\r\n      case 'heading-two':\r\n        return <h2 {...attributes}>{children}</h2>\r\n      case 'heading-three':\r\n        return <h3 {...attributes}>{children}</h3>\r\n      case 'heading-four':\r\n        return <h4 {...attributes}>{children}</h4>\r\n      case 'heading-five':\r\n        return <h5 {...attributes}>{children}</h5>\r\n      case 'heading-six':\r\n        return <h6 {...attributes}>{children}</h6>\r\n      case 'list-item':\r\n        return <li {...attributes}>{children}</li>\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On key down, check for our specific key shortcuts.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onKeyDown = (event, editor, next) => {\r\n    switch (event.key) {\r\n      case ' ':\r\n        return this.onSpace(event, editor, next)\r\n      case 'Backspace':\r\n        return this.onBackspace(event, editor, next)\r\n      case 'Enter':\r\n        return this.onEnter(event, editor, next)\r\n      default:\r\n        return next()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On space, if it was after an auto-markdown shortcut, convert the current\r\n   * node into the shortcut's corresponding type.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onSpace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    const { start } = selection\r\n    const chars = startBlock.text.slice(0, start.offset).replace(/\\s*/g, '')\r\n    const type = this.getType(chars)\r\n    if (!type) return next()\r\n    if (type === 'list-item' && startBlock.type === 'list-item') return next()\r\n    event.preventDefault()\r\n\r\n    editor.setBlocks(type)\r\n\r\n    if (type === 'list-item') {\r\n      editor.wrapBlock('bulleted-list')\r\n    }\r\n\r\n    editor.moveFocusToStartOfNode(startBlock).delete()\r\n  }\r\n\r\n  /**\r\n   * On backspace, if at the start of a non-paragraph, convert it back into a\r\n   * paragraph node.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onBackspace = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    if (selection.isExpanded) return next()\r\n    if (selection.start.offset !== 0) return next()\r\n\r\n    const { startBlock } = value\r\n    if (startBlock.type === 'paragraph') return next()\r\n\r\n    event.preventDefault()\r\n    editor.setBlocks('paragraph')\r\n\r\n    if (startBlock.type === 'list-item') {\r\n      editor.unwrapBlock('bulleted-list')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On return, if at the end of a node type that should not be extended,\r\n   * create a new paragraph below it.\r\n   *\r\n   * @param {Event} event\r\n   * @param {Editor} editor\r\n   * @param {Function} next\r\n   */\r\n\r\n  onEnter = (event, editor, next) => {\r\n    const { value } = editor\r\n    const { selection } = value\r\n    const { start, end, isExpanded } = selection\r\n    if (isExpanded) return next()\r\n\r\n    const { startBlock } = value\r\n    if (start.offset === 0 && startBlock.text.length === 0)\r\n      return this.onBackspace(event, editor, next)\r\n    if (end.offset !== startBlock.text.length) return next()\r\n\r\n    if (\r\n      startBlock.type !== 'heading-one' &&\r\n      startBlock.type !== 'heading-two' &&\r\n      startBlock.type !== 'heading-three' &&\r\n      startBlock.type !== 'heading-four' &&\r\n      startBlock.type !== 'heading-five' &&\r\n      startBlock.type !== 'heading-six' &&\r\n      startBlock.type !== 'block-quote'\r\n    ) {\r\n      return next()\r\n    }\r\n\r\n    event.preventDefault()\r\n    editor.splitBlock().setBlocks('paragraph')\r\n  }\r\n}\r\n\r\n// mapStateToProps：将state映射到组件的props中\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state 映射\",state)\r\n  return {\r\n      state\r\n  }\r\n}\r\n// mapDispatchToProps：将dispatch映射到组件的props中\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\nreturn {\r\n  setIssue(data){\r\n    dispatch(setIssue(data))\r\n  },\r\n  setIssueAdd(data){\r\n    dispatch(setIssueAdd(data))\r\n  }\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit)\r\n//export default Edit;\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { Route,HashRouter, Switch,Redirect } from 'react-router-dom';\nimport Post from './components/post';\nimport Home from './components/home';\nimport Edit from './components/edit';\n\nimport {setConfig} from './actions/ReposActions'\nimport './App.css';\nconst token = 'dbffa19fcb5a4d8fdebac19047e9d20143dfd4ec' // 私有限制权限的token\nconst owner = 'abearxiong'  // 仓库拥有者\nconst name = 'abearxiong.github.io' // 仓库名字\nconst labels = 'xx-space' //'MDU6TGFiZWwxMzU2ODYzMTMz' // label的id\nconst config = {\n  token,\n  owner,\n  name,\n  labels,\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    //store.dispatch({type: Types.SET_CONFIG,data: config})\n    setConfig(config);\n  };\n  componentDidMount () {\n    //console.log(\"App初始化完成\",store)\n  }\n  render() {\n    return (      \n           <Provider store = {store}>\n           <HashRouter>\n              <Switch>\n                  <Route path=\"/\" exact component={Home}/>\n                  <Route path=\"/post/:number\" component={Post}/>\n                  <Route path=\"/edit/:number\" component={Edit}/>\n                  <Redirect to=\"/\" />\n              </Switch>\n            </HashRouter>\n          </Provider>   \n    );\n  }\n}\n// // mapStateToProps：将state映射到组件的props中\n// const mapStateToProps = (state) => {\n//   return {\n//       user: state.user,\n//   }\n// }\n// // mapDispatchToProps：将dispatch映射到组件的props中\n// const mapDispatchToProps = (dispatch, ownProps) => {\n// return {\n//   setConfig (data) {\n//       dispatch(setConfig(data))\n//   }\n// }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(App)\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}